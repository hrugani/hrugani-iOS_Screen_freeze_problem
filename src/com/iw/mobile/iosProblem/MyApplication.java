package com.iw.mobile.iosProblem;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Button;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.Command;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
 
        Form hi = new Form("iOS Freezing Form Case", BoxLayout.y());
        Command backCmd = new Command("") {
            @Override
            public void actionPerformed(ActionEvent evt) {
                System.out.println("back command executed ...");
                hi.showBack();
            }
        };
 
        new HtmlEditor("teste");
        
        Form1 f1 = new Form1();
        f1.setMyBackCmd(backCmd);
        Form2 f2 = new Form2();
        f2.setMyBackCmd(backCmd);
        
        Button btn1 = new Button("Form 1");
        btn1.addActionListener((ActionListener) (ActionEvent evt) -> {
            f1.show();
        });
        Button btn2 = new Button("Fomr 2");
        btn2.addActionListener((ActionListener) (ActionEvent evt) -> {
            f2.show();
        });

        hi.add(btn1);
        hi.add(btn2);
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
